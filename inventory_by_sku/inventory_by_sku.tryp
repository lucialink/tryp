<?xml version="1.0" encoding="UTF-8"?>
<tryp>
    <connections>
        <connection name="OLAP">
            <host>solar2</host>
            <port>5433</port>
            <database>atomstore_olap</database>
            <user>postgres</user>
            <password>dataNew!1</password>
        </connection>
    </connections>
    <datasets>
        <dataset name="dsr">
            <connection>OLAP</connection>
            <query><![CDATA[

SELECT
    categories.parent_name AS "Category",
    brands.parent_name AS "Brand",
    brands.child_code AS "SKU",
    brands.child_name AS "Description",
    area_name AS "Region",
    distributor_name AS "Distributor",
    region_name AS "Region Parent",
    coalesce(sales_value, 0) AS "Sales Value",    
    coalesce(soh_value, 0) AS "SOH Value",
    coalesce(sales_qty, 0) AS "Sales Qty",
    coalesce(soh_qty, 0) AS "SOH Qty",
    coalesce(sales_volume, 0) AS "Sales Volume",
    coalesce(soh_volume, 0) AS "SOH Volume"
    
FROM
    (
        SELECT
            product_id,
            areas.parent_name AS area_name,
            distributors.parent_name AS distributor_name,
            regions.parent_name AS region_name,
            sum(stocks.standard_value) AS sales_value,
            sum(stocks.converted_quantity) AS sales_qty,
            sum(stocks.volume) as sales_volume,
            sum(snapshot.soh_standard_value) AS soh_value,
            sum(snapshot.soh_converted_quantity) AS soh_qty,
            sum(snapshot.soh_volume) AS soh_volume
        FROM
            (
                SELECT
                    stocks.combo,
                    stocks.product_id,
                    sum(stocks.sales_standard_value) AS standard_value,
                    sum(stocks.sales_converted_quantity) AS converted_quantity,
                    sum((stocks.sales_converted_quantity * product.weight) / 1000) AS volume
                FROM
                    mv_agg_fact_daily_transaction_by_sku_by_dome_identifier AS stocks
		JOIN dim_products as product
		ON 
		    product_id = product.id
                    ,
                    (
                        SELECT
                            now()::date AS date
                    ) AS t
                WHERE
                    1 = 1
                    AND stocks.status = 'Active'
                    AND stocks.type IN ('New', 'Promotion', 'Standard')
                    AND stocks.date BETWEEN (t.date - '1 day'::interval - '74 day'::interval)
                        AND (t.date - '1 day'::interval)
                GROUP BY 1, 2
            ) AS stocks        
            FULL JOIN
            (
                SELECT
                    stocks.combo,
                    stocks.product_id,
		    sum(stocks.soh_standard_value ) AS soh_standard_value,
		    sum(stocks.soh_converted_quantity) AS soh_converted_quantity,
            sum((stocks.soh_converted_quantity * product.weight) / 1000) AS soh_volume
                FROM
                    mv_agg_fact_daily_transaction_by_sku_by_dome_identifier AS stocks
		JOIN dim_products as product
		ON 
		    product_id = product.id                    
                    ,
                    (
                        SELECT
                             now()::date AS date
                    ) AS t
                WHERE
                    1 = 1
                    AND stocks.status = 'Active'
                    AND stocks.type IN ('New', 'Promotion', 'Standard')
                    AND stocks.date = t.date
                GROUP BY 1, 2
            ) AS snapshot
            USING (combo, product_id)
            JOIN dim_sites
            USING (combo)
            JOIN mv_closure_sites_hierarchy AS areas
            ON
                dim_sites.principal_code = areas.principal_code
                AND dim_sites.dome_identifier = areas.dome_identifier
                AND areas.extended IS FALSE
                AND areas.parent_level = 3
            JOIN mv_closure_sites_hierarchy AS distributors
            ON
                dim_sites.principal_code = distributors.principal_code
                AND dim_sites.dome_identifier = distributors.dome_identifier
                AND distributors.extended IS FALSE
                AND distributors.parent_level = 4
            JOIN mv_closure_sites_hierarchy AS regions
            ON
                dim_sites.principal_code = regions.principal_code
                AND dim_sites.dome_identifier = regions.dome_identifier
                AND regions.extended IS FALSE
                AND regions.parent_level = 2
        WHERE
            1 = 1
            AND dim_sites.principal_code = 'kraft'
            --AND dim_sites.dome_identifier || '.' || dim_sites.principal_code IN (!security_filter)
            AND dim_sites.active IS TRUE
        GROUP BY
            1, 2, 3, 4
    ) AS stocks
    JOIN mv_closure_product_categories AS categories
    ON
        product_id = categories.child_id
        AND categories.extended IS TRUE
        AND categories.parent_level = 1
    JOIN mv_closure_product_categories AS brands
    ON
        product_id = brands.child_id
        AND brands.extended IS TRUE
        AND brands.parent_level = 2
ORDER BY
    CASE
        WHEN categories.parent_code = 'BISCUITS' THEN 1
        WHEN categories.parent_code = 'SNACKS' THEN 2
        WHEN categories.parent_code = 'CHEESE' THEN 3
        WHEN categories.parent_code = 'GROCERY' THEN 4
        WHEN categories.parent_code = 'CONFECTIONERY' THEN 5
        ELSE 99
    END,
    2, 3, 5, 6;

                ]]>
            </query>
        </dataset>
    </datasets>
        <report name='dsr'>
            <dataset>dsr</dataset>
            <rows>Category,Brand,SKU,Description</rows>
            <rows_results>Category,Brand</rows_results>
            <columns>Region Parent,Region,Distributor</columns>
            <values>Sales Qty,SOH Qty,Sales Value,SOH Value,Sales Volume,SOH Volume</values>
            <computed_values>
                <doscv>doscv</doscv>
                <doscv>doscq</doscv>
                <doscv>dosct</doscv>
            </computed_values>
            <labels>
                <values>
                    <sq>
                        <key>Sales Qty</key>
                        <label>Average Daily Sales (CTN)</label>
                    </sq>
                    <sohq>
                        <key>SOH Qty</key>
                        <label>Stock On Hand (CTN)</label>
                    </sohq>
                    <doscq>
                        <key>DOSC Qty</key>
                        <label>Day of Stock Covered (CTN)</label>
                    </doscq>
                    <sv>
                        <key>Sales Value</key>
                        <label>Average Daily Sales ($)</label>
                    </sv>
                    <sohv>
                        <key>SOH Value</key>
                        <label>Stock On Hand ($)</label>
                    </sohv>
                    <doscv>
                        <key>DOSC Value</key>
                        <label>Day of Stock Covered ($)</label>
                    </doscv>
                    <svol>
                        <key>Sales Volume</key>
                        <label>Average Daily Sales (TONNES)</label>
                    </svol>
                    <sohvol>
                        <key>SOH Volume</key>
                        <label>Stock On Hand (TONNES)</label>
                    </sohvol>
                    <dosct>
                        <key>DOSC Volume</key>
                        <label>Day of Stock Covered (TONNES)</label>
                    </dosct>
                </values>
            </labels>
        </report>
</tryp>
